name: Publish

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip setuptools wheel
      - name: Install dependencies
        run: |
          python -m pip install twine --upgrade
      - name: Build sdist
        run: |
          python setup.py sdist
      - name: Check metadata
        run: |
          twine check --strict dist/*
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip setuptools wheel
      - name: Install dependencies
        run: |
          python -m pip install twine --upgrade
      - name: Build Wheels
        run: |
          python setup.py bdist_wheel
      - name: Check metadata
        run: |
          twine check --strict dist/*
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          password: ${{ secrets.PYPI_API_TOKEN }}
